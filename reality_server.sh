#!/bin/bash

# =============================================================================
# REALITY VPN SERVER SETUP
# –í–µ—Ä—Å–∏—è: 1.0 Final
# =============================================================================

clear
echo "üöÄ REALITY VPN SERVER SETUP"
echo "==========================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ root
if [[ $EUID -ne 0 ]]; then
   echo "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å –ø—Ä–∞–≤–∞–º–∏ root: sudo bash $0"
   exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "$(date '+%H:%M:%S') $1"
}

log "üîÑ –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É..."

# =============================================================================
# –û–ß–ò–°–¢–ö–ê –°–ò–°–¢–ï–ú–´
# =============================================================================

log "üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫..."

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
systemctl stop xray 2>/dev/null || true
systemctl stop v2ray 2>/dev/null || true
systemctl disable xray 2>/dev/null || true
systemctl disable v2ray 2>/dev/null || true

# –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
rm -rf /etc/xray/ /etc/v2ray/ 2>/dev/null || true
rm -f /usr/local/bin/xray /usr/local/bin/v2ray 2>/dev/null || true
rm -f /etc/systemd/system/xray.service /etc/systemd/system/v2ray.service 2>/dev/null || true

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
pkill -f xray 2>/dev/null || true
pkill -f v2ray 2>/dev/null || true

systemctl daemon-reload

log "‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—á–∏—â–µ–Ω–∞"

# =============================================================================
# –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô
# =============================================================================

log "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."

export DEBIAN_FRONTEND=noninteractive
apt-get update -qq
apt-get install -y -qq wget unzip curl qrencode net-tools ufw

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
timedatectl set-timezone UTC

log "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# =============================================================================
# –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï IP
# =============================================================================

log "üåê –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ IP..."

SERVER_IP=""
for service in "ifconfig.me" "ipinfo.io/ip" "icanhazip.com"; do
    SERVER_IP=$(timeout 10 curl -s https://$service 2>/dev/null)
    if [[ $SERVER_IP =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        break
    fi
done

if [[ ! $SERVER_IP =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    log "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    read -p "–í–≤–µ–¥–∏—Ç–µ IP —Å–µ—Ä–≤–µ—Ä–∞ –≤—Ä—É—á–Ω—É—é: " SERVER_IP
fi

log "‚úÖ IP —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP"

# =============================================================================
# –£–°–¢–ê–ù–û–í–ö–ê XRAY
# =============================================================================

log "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–Ω–∏–µ Xray..."

cd /tmp
rm -f Xray-*.zip xray 2>/dev/null

# –ü–æ–ø—ã—Ç–∫–∞ —Å–∫–∞—á–∞—Ç—å
if ! wget -q --timeout=30 https://github.com/XTLS/Xray-core/releases/latest/download/Xray-linux-64.zip; then
    log "‚ö†Ô∏è –û—Å–Ω–æ–≤–Ω–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π..."
    if ! wget -q --timeout=30 https://github.com/XTLS/Xray-core/releases/download/v1.8.23/Xray-linux-64.zip; then
        log "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å Xray"
        exit 1
    fi
fi

unzip -q Xray-linux-64.zip
chmod +x xray

# –ü—Ä–æ–≤–µ—Ä–∫–∞
if ! ./xray version >/dev/null 2>&1; then
    log "‚ùå –û—à–∏–±–∫–∞: –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
mkdir -p /etc/xray /var/log/xray

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞
mv xray /usr/local/bin/
rm -f Xray-linux-64.zip *.md

log "‚úÖ Xray —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# =============================================================================
# –ì–ï–ù–ï–†–ê–¶–ò–Ø –ö–õ–Æ–ß–ï–ô
# =============================================================================

log "üîë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π..."

UUID=$(/usr/local/bin/xray uuid)
KEYS=$(/usr/local/bin/xray x25519)
PRIVATE_KEY=$(echo "$KEYS" | grep "Private key:" | awk '{print $3}')
PUBLIC_KEY=$(echo "$KEYS" | grep "Public key:" | awk '{print $3}')
SHORT_ID=$(openssl rand -hex 4)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
if [[ -z "$UUID" || -z "$PRIVATE_KEY" || -z "$PUBLIC_KEY" || -z "$SHORT_ID" ]]; then
    log "‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–µ–π"
    exit 1
fi

log "‚úÖ –ö–ª—é—á–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã"

# =============================================================================
# –°–û–ó–î–ê–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
# =============================================================================

log "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

cat > /etc/xray/config.json << EOF
{
  "log": {
    "loglevel": "info"
  },
  "inbounds": [
    {
      "listen": "0.0.0.0",
      "port": 443,
      "protocol": "vless",
      "settings": {
        "clients": [
          {
            "id": "$UUID",
            "flow": "xtls-rprx-vision"
          }
        ],
        "decryption": "none"
      },
      "streamSettings": {
        "network": "tcp",
        "security": "reality",
        "realitySettings": {
          "show": false,
          "dest": "www.microsoft.com:443",
          "xver": 0,
          "serverNames": [
            "www.microsoft.com"
          ],
          "privateKey": "$PRIVATE_KEY",
          "shortIds": [
            "",
            "$SHORT_ID"
          ]
        }
      }
    }
  ],
  "outbounds": [
    {
      "protocol": "freedom"
    }
  ]
}
EOF

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if ! /usr/local/bin/xray test -config /etc/xray/config.json >/dev/null 2>&1; then
    log "‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    exit 1
fi

log "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"

# =============================================================================
# –°–û–ó–î–ê–ù–ò–ï –°–ï–†–í–ò–°–ê
# =============================================================================

log "üîß –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."

cat > /etc/systemd/system/xray.service << EOF
[Unit]
Description=Xray Service
After=network.target

[Service]
User=nobody
ExecStart=/usr/local/bin/xray run -config /etc/xray/config.json
Restart=on-failure
LimitNOFILE=1000000

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload

log "‚úÖ –°–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω"

# =============================================================================
# –ù–ê–°–¢–†–û–ô–ö–ê –§–ê–ï–†–í–û–õ–ê
# =============================================================================

log "üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–µ—Ä–≤–æ–ª–∞..."

ufw --force reset >/dev/null 2>&1
ufw default deny incoming >/dev/null 2>&1
ufw default allow outgoing >/dev/null 2>&1
ufw allow ssh >/dev/null 2>&1
ufw allow 443/tcp >/dev/null 2>&1
ufw --force enable >/dev/null 2>&1

log "‚úÖ –§–∞–µ—Ä–≤–æ–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

# =============================================================================
# –ó–ê–ü–£–°–ö –°–ï–†–í–ò–°–ê
# =============================================================================

log "üöÄ –ó–∞–ø—É—Å–∫ Xray..."

systemctl enable xray
systemctl start xray

sleep 3

if systemctl is-active --quiet xray; then
    log "‚úÖ Xray –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    log "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Xray"
    journalctl -u xray --no-pager -n 5
    exit 1
fi

# =============================================================================
# –°–û–•–†–ê–ù–ï–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
# =============================================================================

log "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–ª—è —Å–∫—Ä–∏–ø—Ç–æ–≤
cat > /root/reality_config.env << EOF
SERVER_IP=$SERVER_IP
UUID=$UUID
PRIVATE_KEY=$PRIVATE_KEY
PUBLIC_KEY=$PUBLIC_KEY
SHORT_ID=$SHORT_ID
EOF

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
cat > /root/reality_info.txt << EOF
=== REALITY VPN –°–ï–†–í–ï–† ===
–î–∞—Ç–∞: $(date)
IP: $SERVER_IP
–ü–æ—Ä—Ç: 443

=== –î–ê–ù–ù–´–ï –î–õ–Ø –ö–õ–ò–ï–ù–¢–û–í ===
UUID: $UUID
Public Key: $PUBLIC_KEY
Short ID: $SHORT_ID
SNI: www.microsoft.com
EOF

log "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"

# =============================================================================
# –°–û–ó–î–ê–ù–ò–ï QR-–ö–û–î–ê
# =============================================================================

log "üì± –°–æ–∑–¥–∞–Ω–∏–µ QR-–∫–æ–¥–∞..."

VLESS_URL="vless://$UUID@$SERVER_IP:443?encryption=none&flow=xtls-rprx-vision&security=reality&sni=www.microsoft.com&fp=chrome&pbk=$PUBLIC_KEY&sid=$SHORT_ID&type=tcp#Reality-VPN"

echo "$VLESS_URL" | qrencode -t ansiutf8 > /root/qr_code.txt 2>/dev/null || true
echo "$VLESS_URL" > /root/vless_url.txt

log "‚úÖ QR-–∫–æ–¥ —Å–æ–∑–¥–∞–Ω"

# =============================================================================
# –°–û–ó–î–ê–ù–ò–ï –ö–õ–ò–ï–ù–¢–°–ö–û–ì–û –°–ö–†–ò–ü–¢–ê
# =============================================================================

log "üíª –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞..."

cat > /root/client_setup.sh << 'CLIENTSCRIPT'
#!/bin/bash

echo "üíª REALITY CLIENT SETUP"
echo "======================="

if [[ $EUID -ne 0 ]]; then
   echo "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å –ø—Ä–∞–≤–∞–º–∏ root: sudo bash $0"
   exit 1
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
echo "–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ REALITY —Å–µ—Ä–≤–µ—Ä–∞:"
read -p "IP —Å–µ—Ä–≤–µ—Ä–∞: " SERVER_IP
read -p "UUID: " UUID  
read -p "Public Key: " PUBLIC_KEY
read -p "Short ID: " SHORT_ID

echo "üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫..."
systemctl stop v2ray-client 2>/dev/null || true
rm -rf /etc/v2ray/ /usr/local/bin/v2ray 2>/dev/null || true
pkill -f v2ray 2>/dev/null || true

echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ v2ray..."
apt-get update -qq
apt-get install -y -qq wget unzip curl

cd /tmp
wget -q https://github.com/v2fly/v2ray-core/releases/latest/download/v2ray-linux-64.zip
unzip -q v2ray-linux-64.zip
chmod +x v2ray
mv v2ray /usr/local/bin/
mkdir -p /etc/v2ray

echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
cat > /etc/v2ray/config.json << EOF
{
  "inbounds": [
    {
      "port": 10808,
      "listen": "127.0.0.1", 
      "protocol": "socks"
    },
    {
      "port": 10809,
      "listen": "127.0.0.1",
      "protocol": "http"
    }
  ],
  "outbounds": [
    {
      "protocol": "vless",
      "settings": {
        "vnext": [
          {
            "address": "$SERVER_IP",
            "port": 443,
            "users": [
              {
                "id": "$UUID",
                "flow": "xtls-rprx-vision",
                "encryption": "none"
              }
            ]
          }
        ]
      },
      "streamSettings": {
        "network": "tcp",
        "security": "reality",
        "realitySettings": {
          "fingerprint": "chrome",
          "serverName": "www.microsoft.com",
          "publicKey": "$PUBLIC_KEY",
          "shortId": "$SHORT_ID"
        }
      }
    }
  ]
}
EOF

echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞..."
cat > /etc/systemd/system/v2ray-client.service << EOF
[Unit]
Description=V2Ray Client
After=network.target

[Service]
User=nobody
ExecStart=/usr/local/bin/v2ray run -config /etc/v2ray/config.json
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable v2ray-client
systemctl start v2ray-client

sleep 3
if systemctl is-active --quiet v2ray-client; then
    echo "‚úÖ –ö–ª–∏–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω"
    
    echo "üîç –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
    timeout 10 curl --socks5 127.0.0.1:10808 -s https://httpbin.org/ip || echo "–¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª"
    
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ n8n —Å –ø—Ä–æ–∫—Å–∏..."
    if command -v docker >/dev/null; then
        docker stop n8n 2>/dev/null || true
        docker run -d --name n8n \
          -p 5678:5678 \
          -v n8n_data:/home/node/.n8n \
          -e HTTP_PROXY=http://127.0.0.1:10809 \
          -e HTTPS_PROXY=http://127.0.0.1:10809 \
          --restart unless-stopped \
          docker.n8n.io/n8nio/n8n
        echo "‚úÖ n8n –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–æ–∫—Å–∏"
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞"
    systemctl status v2ray-client --no-pager
fi

echo ""
echo "üéâ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê"
echo "–ü—Ä–æ–∫—Å–∏: 127.0.0.1:10808 (SOCKS5), 127.0.0.1:10809 (HTTP)"
CLIENTSCRIPT

chmod +x /root/client_setup.sh

log "‚úÖ –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω"

# =============================================================================
# –§–ò–ù–ê–õ–¨–ù–´–ô –í–´–í–û–î
# =============================================================================

echo ""
echo "üéâ REALITY VPN –°–ï–†–í–ï–† –£–°–¢–ê–ù–û–í–õ–ï–ù!"
echo "================================="
echo ""
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
echo "   IP: $SERVER_IP"
echo "   –ü–æ—Ä—Ç: 443"
echo "   UUID: $UUID"
echo "   Public Key: $PUBLIC_KEY"
echo "   Short ID: $SHORT_ID"
echo ""
echo "üì± QR-–ö–û–î –î–õ–Ø –ú–û–ë–ò–õ–¨–ù–´–•:"
if [ -f /root/qr_code.txt ]; then
    cat /root/qr_code.txt
else
    echo "$VLESS_URL" | qrencode -t ansiutf8
fi
echo ""
echo "üîó –°—Å—ã–ª–∫–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞:"
echo "$VLESS_URL"
echo ""
echo "üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
echo "   Android: v2rayNG"
echo "   iOS: FairVPN, Shadowrocket"
echo ""
echo "üíª –î–ª—è n8n —Å–µ—Ä–≤–µ—Ä–∞:"
echo "   1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª: scp root@$SERVER_IP:/root/client_setup.sh ./"
echo "   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo bash client_setup.sh"
echo ""
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "   –°—Ç–∞—Ç—É—Å: systemctl status xray"
echo "   –õ–æ–≥–∏: journalctl -u xray -f"
echo "   –ö–æ–Ω—Ñ–∏–≥: /etc/xray/config.json"
echo ""
echo "‚úÖ –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º!"
